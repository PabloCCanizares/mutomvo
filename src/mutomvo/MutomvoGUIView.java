package mutomvo;

import mutomvo.Utils.Utils;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import mutomvo.Exceptions.MutomvoException;
import mutomvo.TabbedPanels.MutationPanel;
import mutomvo.TabbedPanels.ProjectsPanel;


/**
 * The application's main frame.
 * 
 * @author Alberto Núñez Covarrubias
 */
public class MutomvoGUIView extends FrameView{

    // Mutation Panel
    MutationPanel mutationPanel;    
    JScrollPane mutationScroll;

    // Projects panel
    ProjectsPanel projectPanel;
    JScrollPane projectsScroll;   

    /**
     * This method initializes all the panels and the three containing models.
     * 
     * @param app Application
     */
    public MutomvoGUIView(SingleFrameApplication app){
        
        super(app);

        // Init components
        initComponents();

        // Configure GUI
        this.getFrame().setResizable(false);

        // Set-up tabs
        setUpTabs();
        
        // Set the initial view
        try{        
            workingArea.setSelectedIndex(Utils.getTabIndexFromName(workingArea, Utils.projectTabTitle)); 
        }
        catch (MutomvoException e) {
            Utils.showErrorMessage(e.getMessage(), "Error while selecting the Project Tab to be shown");
        }
    }
    
    /*
     * Sets up each panel in the tabbed pane
     */
    private void setUpTabs() {            
        
        // Create a Projects panel
        projectPanel = new ProjectsPanel (this);
        projectsScroll = new JScrollPane();
        projectsScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        projectsScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        projectsScroll.setViewportView(projectPanel);  
        workingArea.addTab(Utils.projectTabTitle, projectsScroll);        
        
        // Create a Mutation panel
        mutationPanel = new MutationPanel(this);
        mutationScroll = new JScrollPane();
        mutationScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        mutationScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        mutationScroll.setViewportView(mutationPanel);
        workingArea.addTab(Utils.mutationTabTitle, mutationScroll);
    }
    
    /**
     * Show the about box
     */
    @Action
    public void showAboutBox() {
        
        if (aboutBox == null) {
            JFrame mainFrame = MutomvoGUIApp.getApplication().getMainFrame();
            aboutBox = new MutomvoAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        
        MutomvoGUIApp.getApplication().show(aboutBox);
    }
       
    /**
     * 
     * 
     * @param projectName Name of the project to be loaded
     */
    public boolean loadProject (String projectName){    
        return (mutationPanel.loadMutationProjectInPanel(projectName));
    }
    
    /**
     * Updates the tree
     */
    public void updateTree(){
        projectPanel.updateTree();
    }
    
    /**
     * Shows the mutation panel
     */
    public void showMutationPanel (){    
        
        try{        
            workingArea.setSelectedIndex(Utils.getTabIndexFromName(workingArea, Utils.mutationTabTitle)); 
        }
        catch (MutomvoException e) {
            Utils.showErrorMessage(e.getMessage(), "Error while selecting the Muation Tab to be shown");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        workingArea = new javax.swing.JTabbedPane();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        itemGenerateMutantReport = new javax.swing.JMenuItem();
        itemExtendedMutantReport = new javax.swing.JMenuItem();
        itemGenerateExecutionReport = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        itemDeletion = new javax.swing.JMenu();
        itemDeleteExistingMutants = new javax.swing.JMenuItem();
        itemDeleteTests = new javax.swing.JMenuItem();
        itemFilterLines = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setMaximumSize(new java.awt.Dimension(830, 620));
        mainPanel.setMinimumSize(new java.awt.Dimension(830, 620));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(830, 620));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(MutomvoGUIView.class);
        workingArea.setBackground(resourceMap.getColor("workingArea.background")); // NOI18N
        workingArea.setAutoscrolls(true);
        workingArea.setMaximumSize(new java.awt.Dimension(830, 610));
        workingArea.setMinimumSize(new java.awt.Dimension(830, 610));
        workingArea.setName("workingArea"); // NOI18N
        workingArea.setPreferredSize(new java.awt.Dimension(830, 610));
        mainPanel.add(workingArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 810, 660));

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(MutomvoGUIView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        itemGenerateMutantReport.setText(resourceMap.getString("itemGenerateMutantReport.text")); // NOI18N
        itemGenerateMutantReport.setName("itemGenerateMutantReport"); // NOI18N
        itemGenerateMutantReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemGenerateMutantReportMouseClicked(evt);
            }
        });
        itemGenerateMutantReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGenerateMutantReportActionPerformed(evt);
            }
        });
        jMenu2.add(itemGenerateMutantReport);

        itemExtendedMutantReport.setText(resourceMap.getString("itemExtendedMutantReport.text")); // NOI18N
        itemExtendedMutantReport.setName("itemExtendedMutantReport"); // NOI18N
        itemExtendedMutantReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExtendedMutantReportActionPerformed(evt);
            }
        });
        jMenu2.add(itemExtendedMutantReport);

        jMenu1.add(jMenu2);

        itemGenerateExecutionReport.setText(resourceMap.getString("itemGenerateExecutionReport.text")); // NOI18N
        itemGenerateExecutionReport.setName("itemGenerateExecutionReport"); // NOI18N
        itemGenerateExecutionReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGenerateExecutionReportActionPerformed(evt);
            }
        });
        jMenu1.add(itemGenerateExecutionReport);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jMenu1.add(jSeparator1);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jMenu1.add(jSeparator2);

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        itemDeletion.setText(resourceMap.getString("itemDeletion.text")); // NOI18N
        itemDeletion.setName("itemDeletion"); // NOI18N

        itemDeleteExistingMutants.setText(resourceMap.getString("itemDeleteExistingMutants.text")); // NOI18N
        itemDeleteExistingMutants.setName("itemDeleteExistingMutants"); // NOI18N
        itemDeleteExistingMutants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDeleteExistingMutantsActionPerformed(evt);
            }
        });
        itemDeletion.add(itemDeleteExistingMutants);

        itemDeleteTests.setText(resourceMap.getString("itemDeleteTests.text")); // NOI18N
        itemDeleteTests.setName("itemDeleteTests"); // NOI18N
        itemDeletion.add(itemDeleteTests);

        jMenu1.add(itemDeletion);

        itemFilterLines.setText(resourceMap.getString("itemFilterLines.text")); // NOI18N
        itemFilterLines.setName("itemFilterLines"); // NOI18N
        itemFilterLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemFilterLinesActionPerformed(evt);
            }
        });
        jMenu1.add(itemFilterLines);

        menuBar.add(jMenu1);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

        
    private void itemGenerateMutantReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemGenerateMutantReportMouseClicked
        // TODO add your handling code here: 
        int i=0;
    }//GEN-LAST:event_itemGenerateMutantReportMouseClicked

private void itemGenerateMutantReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGenerateMutantReportActionPerformed
    
    //Generate the mutants report    
    mutationPanel.action_generatePrevShortMutantReport();
}//GEN-LAST:event_itemGenerateMutantReportActionPerformed

private void itemDeleteExistingMutantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDeleteExistingMutantsActionPerformed
    mutationPanel.action_deleteAllExistingMutants();
}//GEN-LAST:event_itemDeleteExistingMutantsActionPerformed

private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_jMenu1ActionPerformed

private void itemFilterLinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemFilterLinesActionPerformed
    mutationPanel.action_filterLines();
}//GEN-LAST:event_itemFilterLinesActionPerformed

private void itemGenerateExecutionReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGenerateExecutionReportActionPerformed
    mutationPanel.action_generateMutantsReport();
}//GEN-LAST:event_itemGenerateExecutionReportActionPerformed

private void itemExtendedMutantReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExtendedMutantReportActionPerformed
    mutationPanel.action_generatePrevExtendedMutantsReport();
}//GEN-LAST:event_itemExtendedMutantReportActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        mutationPanel.action_analyseEquivalentMutants();
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemDeleteExistingMutants;
    private javax.swing.JMenuItem itemDeleteTests;
    private javax.swing.JMenu itemDeletion;
    private javax.swing.JMenuItem itemExtendedMutantReport;
    private javax.swing.JMenuItem itemFilterLines;
    private javax.swing.JMenuItem itemGenerateExecutionReport;
    private javax.swing.JMenuItem itemGenerateMutantReport;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTabbedPane workingArea;
    // End of variables declaration//GEN-END:variables
    private JDialog aboutBox;
}
